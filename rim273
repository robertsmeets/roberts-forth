45VS$="2.73"50Q%=4:QQ%=660DIM ruim% &C0070maxlen=8080evvec=&22090brkv=&202100osbyte=&FFF4110oscli=&FFF7120osword=&FFF1130osnewl=&FFE7140osrdch=&FFE0150oswrch=&FFEE160osfile=&FFDD170ad=&70: seed=ad+10180here=ad+15190lwoord=ad+17200?lwoord=0: lwoord?1=0210depth=ad+19220intib=ad+21230state=ad+23240base=ad+25250ervek=ad+27260stack=0270buffer=&500280pad=&400285PROCassem292C$="*SAVE ROFORTH "+STR$~ruim%+" "+STR$~O%295PRINT C$296OSCLI(C$)330END340DEFPROCassem350FOR opt%=Q%TO QQ%STEP (QQ%-Q%)355PRINT "Pass " ; opt%360P%=&8000:O%=ruim%370[optopt%410jmp langen420jmp serven430EQUB &CF \ ROM type 1100 1111440EQUB (cop-&8000)450EQUB 273 \ Binaire versie460.rtxt EQUS "Robert's Forth"470EQUB 0480EQUS "Versie "+VS$490.cop EQUB 0500EQUS "(C)"510EQUS " 1988 Robert Smeets"520EQUB 0530.serven php:pha:tya:pha:txa:pha:tsx:lda&103,X:cmp#4: beq unreco:cmp#9:beq shelp:.unniet pla:tax:pla:tay:pla:plp:rts540.unreco ldx#0:.unrlp lda(&F2),Y:cmp#ASC"." :beq unpunt:cmp uncom,X:bne unniet:iny:inx:cpx#5:bne unrlp:.unwel lda#142:ldx&F4:jmp osbyte:.unpunt cpx#2:bpl unwel:bmi unniet550.uncom EQUS"FORTH"560.shelp lda(&F2),Y:cmp#32:bne shna:iny:bne shelp:.shna cmp#13:bne unniet:jsr osnewl:ldx#0:.shel lda rtxt,X:beq shkla:jsr oswrch:inx:bne shel:.shkla jsr osnewl:jmp unniet570opt FNinitwrd575.defspc EQUB 5: EQUS "SPACE": EQUB FNL(defspp): EQUB FNH(defspp)580.spc lda#32:jmp oswrch585.defspp EQUB 3: EQUS "SP!": EQUB FNL(defdropit): EQUB FNH(defdropit)590.spp lda#0:sta depth:rts600.put jsr xadr:lda ad:sta stack,X:lda ad+1:sta stack+1,X:inc depth:rts610.xadr lda depth:.xxadr asl A:tax:rts615.defdropit EQUB 4: EQUS "DROP": EQUB FNL(defrat): EQUB FNH(defrat)620.dropit lda depth:beq serr:jsr xxadr:lda stack-2,X:sta ad:lda stack-1,X:sta ad+1:dec depth:rts630.serr jmp serror635.defrat EQUB 2: EQUS "R@": EQUB FNL(defj): EQUB FNH(defj)640.rat tsx:txa:clc:adc#4:tax:lda&100,X:sta ad+1:dex:lda&100,X:sta ad:jmp put650.rrat tsx:txa:clc:adc#6:tax:lda&100,X:sta ad+1:dex:lda&100,X:sta ad:jmp put655.defj EQUB 1: EQUS "J": EQUB FNL(deffromr): EQUB FNH(deffromr)660.j tsx:txa:clc:adc#8:tax:lda&100,X:sta ad+1:dex:lda&100,X:sta ad: jmp put665.deffromr EQUB 2: EQUS "R>": EQUB FNL(deftor): EQUB FNH(deftor)670.fromr pla:tay:pla:tax:pla:sta ad:pla:sta ad+1:txa:pha:tya:pha:jmp put675.deftor EQUB 2: EQUS ">R": EQUB FNL(defpick): EQUB FNH(defpick)680.tor jsr dropit:pla:tay:pla:tax:lda ad+1:pha:lda ad:pha:txa:pha:tya:pha:rts685.defpick EQUB 4: EQUS "PICK": EQUB FNL(defdup): EQUB FNH(defdup)690.pick jsr dropit:.pickwrm jsr xadr:txa:sec:sbc ad:sec:sbc ad:tax:lda stack-2,X:sta ad:lda stack-1,X:sta ad+1:jmp put695.defdup EQUB 3: EQUS "DUP": EQUB FNL(defover): EQUB FNH(defover)700.dup jsr dropit:jsr put:jmp put710.msb0 lda#0:sta ad+1:rts715.defover EQUB 4: EQUS "OVER": EQUB FNL(defswap): EQUB FNH(defswap)720.over ldy#0:sty ad+1:iny:sty ad:jmp pickwrm725.defswap EQUB 4: EQUS "SWAP": EQUB FNL(defdept): EQUB FNH(defdept)730.swap jsr droptw:lda ad:pha:lda ad+1:pha:lda ad+2:sta ad:lda ad+3:sta ad+1:jsr put:pla:sta ad+1:pla:sta ad:jmp put735.defdept EQUB 5: EQUS "DEPTH": EQUB FNL(defspaces): EQUB FNH(defspaces)740.dept jsr msb0:lda depth:sta ad:jmp put745.defspaces EQUB 6: EQUS "SPACES": EQUB FNL(defat): EQUB FNH(defat)750.spaces jsr dropit:.sok lda ad+1:cmp#0:bne dos:lda ad:cmp#0:bne dos:rts:.dos jsr spc:dec ad:lda ad: cmp#&FF:bne sok:dec ad+1:jmp sok755.defat EQUB 1: EQUS "@": EQUB FNL(defpling): EQUB FNH(defpling)760.at jsr dropit:.atwrm ldy#0:lda(ad),Y:tax:iny:lda(ad),Y:sta ad+1:txa:sta ad:jmp put #4765.defpling EQUB 1: EQUS "!": EQUB FNL(defemit): EQUB FNH(defemit)770.pling jsr droptw:ldy#0:lda ad:sta(ad+2),Y:lda ad+1:iny:sta(ad+2),Y:rts775.defemit EQUB 4: EQUS "EMIT": EQUB FNL(defcat): EQUB FNH(defcat)780.emit jsr dropit:lda ad:jmp oswrch785.defcat EQUB 2: EQUS "C@": EQUB FNL(defcpling): EQUB FNH(defcpling)790.cat jsr dropit:ldy#0:lda(ad),Y:sta ad:jsr msb0:jmp put795.defcpling EQUB 2: EQUS "C!": EQUB FNL(defvrgt): EQUB FNH(defvrgt)800.cpling jsr droptw:lda ad:ldy#0:sta(ad+2),Y:rts805.defvrgt EQUB 1: EQUS "?": EQUB FNL(defkey): EQUB FNH(defkey)810.vrgt jsr at:jmp punt815.defkey EQUB 3: EQUS "KEY": EQUB FNL(defplus): EQUB FNH(defplus)820.key jsr osrdch:sta ad:jsr msb0:jmp put825.defplus EQUB 1: EQUS "+": EQUB FNL(defher): EQUB FNH(defher)830.plus jsr droptw:lda ad:clc:adc ad+2:sta ad:lda ad+1:adc ad+3:sta ad+1:jmp put835.defher EQUB 4: EQUS "HERE": EQUB FNL(defallot): EQUB FNH(defallot)840.her lda here:sta ad:lda here+1:sta ad+1:jmp put845.defallot EQUB 5: EQUS "ALLOT": EQUB FNL(defquery): EQUB FNH(defquery)850.allot jsr dropit:.alloti lda here:clc:adc ad:sta here:lda here+1:adc ad+1:sta here+1:rts855.defquery EQUB 5: EQUS "QUERY": EQUB FNL(defmode): EQUB FNH(defmode)860.query lda#maxlen:sta ad+2:lda#0:sta ad+3:lda#FNL(buffer):sta ad:lda#FNH(buffer):sta ad+1:jmp exwrm870.tib lda#FNL (buffer) :sta ad:lda#FNH(buffer):sta ad+1:jmp put880.status jsr spc:lda#ASC"O":jsr oswrch:lda#ASC"K": jmp oswrch875.defmode EQUB 4: EQUS "MODE": EQUB FNL(defwords): EQUB FNH(defwords)890.mode jsr dropit:lda#22:jsr oswrch:lda ad:jmp oswrch895.defwords EQUB 5: EQUS "WORDS": EQUB FNL(defliteral): EQUB FNH(defliteral)920.words jsr osnewl:jsr osnewl:lda lwoord:sta ad+5:lda lwoord+1:sta ad+6:.wordz lda ad+5:bne wook:lda ad+6:bne wook:jsr osnewl:jmp osnewl930.wook lda#1:clc:adc ad+5:sta ad:lda#0:adc ad+6:sta ad+1:ldy#0:lda(ad+5),Y:and #&7F:pha:sta ad+2:sty ad+3:jsr typwrm:jsr spc: ldy#0:pla:tay:iny:lda(ad+5),Y:pha:iny:lda(ad+5),Y:sta ad+6:pla:sta ad+5:jmp wordz940.vind lda lwoord:sta ad+3:lda lwoord+1:sta ad+4:.vindz lda ad+3:bne vook:lda ad+4:bne vook:lda#0:sta ad:sta ad+1:rts950.vook ldy#0:lda(ad+3),Y:and#&7F:cmp ad+2:beq voegel:.voet tay:iny:lda(ad+3),Y:pha:iny:lda(ad+3),Y:sta ad+4:pla:sta ad+3:jmp vindz960.voegel ldy#0:.voezz lda(ad),Y:iny:cmp(ad+3),Y:bne voeni:cpy ad+2:bne voezz:jmp voewat:.voeni:ldy#0:lda(ad+3),Y:and#&7F:jmp voet970.voewat ldy#0:lda(ad+3),Y:and#&7F:clc:adc ad+3:sta ad:lda ad+4:adc#0:sta ad+1:lda ad:clc:adc#3:sta ad:lda ad+1:adc#0:sta ad+1:rts990.command jsr comips:lda state:bne tostcom:ldx ad+6:ldy ad+7:jmp oscli:.tostcom jmp stcom1000.doe jsr droptw:lda ad+2:sta ad+8:lda ad:sta ad+6:lda ad+1:sta ad+7:jsr vind:lda ad:bne doeiet:lda ad+1:bne doeiet1010ldy#0:lda(ad+6),Y:cmp#ASC"*":beq command:jsr getl:lda state:bne getcom:rts:.getcom jmp literal:.doeiet jmp doeiets1015.defliteral EQUB 7: EQUS "LITERAL": EQUB FNL(deflit): EQUB FNH(deflit)1020.literal lda#&20:jsr czet:lda#FNL(lit):jsr czet:lda#FNH(lit):jsr czet:jmp komma1025.deflit EQUB 3: EQUS "LIT": EQUB FNL(definterpret): EQUB FNH(definterpret)1030.lit pla:clc:adc#1:sta ad:tax:pla:adc#0:sta ad+1:tay:txa:clc:adc#1:tax:tya:adc#0:pha:txa:pha:jmp atwrm1040.getl ldy#0:lda(ad+6),Y:cmp#ASC"-":bne getal:lda#1:clc:adc ad+6:sta ad+6:lda #0:adc ad+7:sta ad+7:dec ad+8:jsr getal:jmp negate1050.getal ldy#0:sty ad+4:sty ad+5:.getloop cpy ad+8:beq getend:lda(ad+6),Y:cmp# ASC"A":bpl geta:sec:sbc#ASC"0":jmp getvoeg:.geta sec:sbc#(ASC"A"-10)1060.getvoeg cmp base:bcs nigetal:pha:iny:tya:pha:lda#0:sta ad+3:lda base:sta ad+2:jsr maalwrm:lda ad:sta ad+4:lda ad+1:sta ad+5:pla:tay:pla:clc:adc ad+4:sta ad+4:lda#0:adc ad+5:sta ad+5:jmp getloop1070.getend lda ad+4:sta ad:lda ad+5:sta ad+1:jsr put:jmp skips1080.doeiets ldy#0:lda(ad+3),Y:and#&80:bne doewe:lda state:beq doewe:ldy#0:lda#&20:sta(here),Y:iny:lda ad:sta(here),Y:lda ad+1:iny:sta(here),Y:.allot3 lda#3:clc:adc here:sta here:lda here+1:adc#0:sta here+1:rts1090.allot2 lda#2:clc:adc here:sta here:lda#0:adc here+1:sta here+1:rts1100.nigetal jmp werror1110.doewe jmp(ad)1120.findit jsr skips:ldy intib:lda buffer,Y:cmp#13:beq firet:lda intib:sta ad+2:clc:adc#FNL(buffer):sta ad:lda#0:adc#FNH(buffer):sta ad+1:jsr put:jsr normsk:lda intib:sec:sbc ad+2:sta ad:jsr msb0:jsr put:jsr skips:jsr droptw:jsr vind1130lda ad:bne firet:lda ad+1:bne firet:jmp werror:.firet rts1145.definterpret EQUB 9: EQUS "INTERPRET": EQUB FNL(defforget): EQUB FNH(defforget)1150.interpret lda#0:sta intib:.intp jsr skips:ldy intib:lda buffer,Y:cmp#13:beq inret:lda intib:sta ad+2:clc:adc#FNL(buffer):sta ad:lda#0:adc#FNH (buffer):sta ad+1:jsr put:jsr normsk:lda intib:sec:sbc ad+2:sta ad:jsr msb0:jsr put1160jsr skips:jsr doe:jmp intp1170.inret rts1175.defforget EQUB 6: EQUS "FORGET": EQUB FNL(defstart): EQUB FNH(defstart)1180.forget jsr findit:lda ad+3:bne forgok:lda ad+4:bne forgok:jmp werror:.forgok lda ad+3:sta here:lda ad+4:sta here+1:lda ad:sec:sbc#2:sta ad:lda ad+1:sbc#0:sta ad+1:ldy#0:lda(ad),Y:sta lwoord:iny:lda(ad),Y:sta lwoord+1:rts1190.skips ldy intib:lda buffer,Y:cmp#32:bne skret:inc intib:jmp skips:.skret rts1200.normsk ldy intib:lda buffer,Y:cmp#32:beq nkret:cmp#13:beq nkret:inc intib:jmp normsk:.nkret rts1210.comips ldy intib:lda buffer, Y:cmp#ASC"\":beq comir:cmp#13:beq comr:inc intib:jmp comips:.comir lda#13:sta buffer,Y:inc intib:.comr rts1220.langen cmp#1:beq start:rts1225.defstart EQUB 5: EQUS "START": EQUB FNL(definit): EQUB FNH(definit)1230.start cli:jsr init:jmp abort1235.definit EQUB 4: EQUS "INIT": EQUB FNL(defrom): EQUB FNH(defrom)1240.init lda#FNL(brkk) :sta&202:lda#FNH (brkk) :sta&203:lda#FNL(type):sta ervek:lda#FNH(type):sta ervek+11250lda#FNL(defspc):sta lwoord:lda #FNH(defspc):sta lwoord+11260jsr ram:lda#0:sta state:sta state+1:sta base+1:jmp decimal1265.defrom EQUB 3: EQUS "ROM": EQUB FNL(defram): EQUB FNH(defram)1270.rom lda herstor:sta here:lda herstor+1:sta here+1:rts1275.defram EQUB 3: EQUS "RAM": EQUB FNL(defabort): EQUB FNH(defabort)1280.ram lda#131:jsr osbyte:stx here:sty here+1:rts1290.toev lda#126:jsr osbyte1300.etxt EQUB 0:EQUB&11:EQUS"Escape":EQUB 01305.defabort EQUB 5: EQUS "ABORT": EQUB FNL(defquit): EQUB FNH(defquit)1310.abort jsr spp1315.defquit EQUB 4: EQUS "QUIT": EQUB FNL(defdblpunt): EQUB FNH(defdblpunt)1320.quit :.qlp jsr osnewl:ldx#255:txs:jsr query:jsr interpret:lda state:bne qlp:jsr status:jmp qlp1330.serror:EQUB 0:EQUB 0:EQUS"Stapel leeg":EQUB 01340.werror:EQUB 0:EQUB 0:EQUS"Woord onbekend":EQUB 01350.in lda#FNL(intib):sta ad:lda#FNH(intib):sta ad+1:jmp put1360.voegtoe:.voegwrm jsr skips:lda intib:sta ad+2:jsr normsk:lda intib:sec:sbc ad+2:cmp#0:beq crerror:sta ad+3:ldy#0:sta(here),Y:iny:ldx ad+2:.vlp lda buffer,X-sta(here),Y:inx:iny:cmp#32:beq voegst:cmp#13:bne vlp:.voegst dey:lda lwoord1370sta (here), Y:iny:lda lwoord+11380sta(here),Y:lda here:sta lwoord:lda here+1:sta lwoord+1:iny:tya:pha1390pla:clc:adc here:sta here:lda#0:adc here+1:sta here+1:rts1400.crerror EQUB 0:EQUB 0:EQUS"Geen goed woord":EQUB 01405.defdblpunt EQUB 1: EQUS ":": EQUB FNL(defcreate): EQUB FNH(defcreate)1410.dblpnt jsr voegtoe:lda#1:sta state:rts1415.defcreate EQUB 6: EQUS "CREATE": EQUB FNL(defconstant): EQUB FNH(defconstant)1420.create jsr voegtoe:lda#&20:jsr czet:lda#FNL(creac) :jsr czet:lda#FNH(creac):jmp czet1430.creac pla:clc:adc#1:sta ad:pla:adc#0:sta ad+1:jmp put1435.defconstant EQUB 8: EQUS "CONSTANT": EQUB FNL(defstt): EQUB FNH(defstt)1440.constant jsr voegtoe:lda#&20:jsr czet:lda#FNL(constc) :jsr czet:lda#FNH (constc):jsr czet:jmp komma1450.constc pla:clc:adc#1:sta ad:pla:adc#0:sta ad+1:jmp atwrm1455.defstt EQUB 5: EQUS "STATE": EQUB FNL(defbse): EQUB FNH(defbse)1460.stt lda#FNL(state):sta ad:lda#FNH(state):sta ad+1:jmp put1465.defbse EQUB 4: EQUS "BASE": EQUB FNL(defnulis): EQUB FNH(defnulis)1470.bse lda#FNL(base):sta ad:lda#FNH(base):sta ad+1:jmp put1475.defnulis EQUB 2: EQUS "0=": EQUB FNL(deftrue): EQUB FNH(deftrue)1480.nulis jsr dropit:lda#0:cmp ad:bne nnul:cmp ad+1:bne nnul:jmp true:.nnul jmp false1505.defiss EQUB 1: EQUS "=": EQUB FNL(defnulkl): EQUB FNH(defnulkl)1510.iss jsr droptw:lda ad:cmp ad+2:bne false:lda ad+1:cmp ad+3:bne false:beq true1515.defnulkl EQUB 2: EQUS "0<": EQUB FNL(defnulgr): EQUB FNH(defnulgr)1520.nulkl jsr dropit:lda ad+1:bmi true:bpl false1521.deftrue EQUB 4: EQUS "TRUE": EQUB FNL(deffalse): EQUB FNH(deffalse)1522.true ldy#0:sty ad+1:iny:sty ad:jmp put1523.deffalse EQUB 5: EQUS "FALSE": EQUB FNL(defiss): EQUB FNH(defiss)1524.false lda#0:sta ad:sta ad+1:jmp put1525.defnulgr EQUB 2: EQUS "0>": EQUB FNL(defkl): EQUB FNH(defkl)1530.nulgr jsr dropit:lda ad+1:bmi false:bne true:lda ad:bne true:beq false1535.defkl EQUB 1: EQUS "<": EQUB FNL(defgr): EQUB FNH(defgr)1540.kl jsr droptw:lda ad+1:cmp ad+3:beq klna:bpl false:bmi true:.klna lda ad:cmp ad+2:bcs false:bcc true1545.defgr EQUB 1: EQUS ">": EQUB FNL(defimmediate): EQUB FNH(defimmediate)1550.gr jsr droptw:lda ad+1:cmp ad+3:beq grna:bmi false:bpl true:.grna lda ad:cmp ad+2:beq false:bcs true:bcc false1560.ukl jsr droptw:lda ad+1:cmp ad+3:beq klna:bcc true:bcs false1565.defimmediate EQUB 9: EQUS "IMMEDIATE": EQUB FNL(deftype): EQUB FNH(deftype)1570.immediate lda lwoord:sta ad:lda lwoord+1:sta ad+1:ldy#0:lda(ad),Y:ora#&80:sta(ad),Y:rts1580.stcom lda#&20:jsr czet:lda#FNL(stcode) :jsr czet:lda#FNH(stcode):jsr czet:lda#0:sta ad+2:ldy#1:.stplp lda(ad+6),Y:cmp#13:beq stprret1590sta(here),Y:iny:jmp stplp1600.stprret sta(here),Y:tya:ldy#0:sta(here),Y:tay:iny:sty ad:jsr msb0:jmp allot1610.tprint lda state:beq tprdoe:lda#&20:jsr czet:lda#FNL(tprintcode):jsr czet:lda#FNH (tprintcode):jsr czet:lda#0:sta ad+2:ldx intib:ldy#1:.tplp lda buffer,X:cmp#13:beq tprret1620cmp#ASC"""":beq tpraan:sta(here),Y:inc intib:inx:iny:jmp tplp1630.tpraan inc intib:.tprret dey: tya:ldy#0:sta(here),Y:tay:iny:sty ad:jsr msb0:jmp alloti1640.tprdoe ldx intib:lda buffer,X:cmp#13:beq tprdr:cmp#ASC"""":beq tprdr:jsr oswrch:inc intib:jmp tprdoe:.tprdr inc intib:rts1650.tprintcode pla:clc:adc#1:sta ad:pla:adc#0:sta ad+11660ldy#0:lda(ad),Y:sta ad+2:lda#0:sta ad+3:lda ad:clc:adc#1:sta ad:lda ad+1:adc#0:sta ad+1:lda ad:pha:lda ad+1:pha:lda ad+2:pha:jsr typwrm:pla:sta ad+2:pla:sta ad+1:pla:clc:adc ad+2:sta ad:lda ad+1:adc#0:sta ad+11670jmp (ad)1680.stcode pla:clc:adc#1:sta ad:pla:adc#0:sta ad+11690ldy#0:lda(ad),Y:sta ad+2:lda ad:clc:adc#1:sta ad:lda ad+1:adc#0:sta ad+1:lda ad:pha:lda ad+1:pha:lda ad+2:pha:ldx ad:ldy ad+1:jsr oscli:pla:sta ad+2:pla:sta ad+1:pla:clc:adc ad+2:sta ad:lda ad+11700adc#0:sta ad+1: jmp (ad)1705.deftype EQUB 4: EQUS "TYPE": EQUB FNL(defcls): EQUB FNH(defcls)1710.type jsr droptw:.typwrm lda ad:clc:adc ad+2:sta ad+2:lda ad+1:adc ad+3:sta ad+3:ldy#0:.tyloop lda ad:cmp ad+2:bne tyhup:lda ad+1:cmp ad+3:bne tyhup:rts1720.tyhup lda(ad),Y:jsr oswrch:clc:lda#1:adc ad:sta ad:lda#0:adc ad+1:sta ad+1:jmp tyloop1725.defcls EQUB 3: EQUS "CLS": EQUB FNL(defexpect): EQUB FNH(defexpect)1730.cls lda#12:jmp oswrch1740.droptw jsr dropit:lda ad:sta ad+2:lda ad+1:sta ad+3:jmp dropit1745.defexpect EQUB 6: EQUS "EXPECT": EQUB FNL(defkomma): EQUB FNH(defkomma)1750.expect jsr droptw:.exwrm lda ad:sta ad+4:clc:adc ad+2:sta ad+2:lda ad+1:sta ad+5:adc ad+3:sta ad+3:.exloop lda ad:cmp ad+2:bne exhup:lda ad+1:cmp ad+3:bne exhup:.exrt jmp exrut1760.exhup lda#0:sta intib:jsr osrdch: cmp#13:beq exret:cmp#271770beq exesc:cmp#127:beq exdel:jsr oswrch:cmp#32:bcc exloop:cmp#128:bcs exloop:ldy#0:sta(ad),Y:lda#1:clc:adc ad:sta ad:lda#0:adc ad+1:sta ad+1:jmp exloop:.exesc jmp toev:.exret jsr spc1780.exrut ldy#0:lda#13:sta(ad),Y:rts1800.exdel lda ad:cmp ad+4:bne exdoedel:lda ad+1:cmp ad+5:beq exloop:.exdoedel sec:lda ad:sbc#1l:sta ad:lda ad+1l:sbc#0:sta ad+1:lda#127:jsr oswrch:jmp exloop1805.defkomma EQUB 1: EQUS ",": EQUB FNL(defckomma): EQUB FNH(defckomma)1810.komma jsr dropit:.komwrm ldy#0:lda ad:sta(here),Y:iny:lda ad+1:sta(here),Y:jmp allot21815.defckomma EQUB 2: EQUS "C,": EQUB FNL(defnegate): EQUB FNH(defnegate)1820.ckomma jsr dropit:.ckomwrm lda ad:.czet ldy#0:sta(here),Y:.allotl ldx#1l:stx ad:jsr msb0:jmp alloti1830.eenplus jsr dropit:.eenpluswrm lda#0:sec:adc ad:sta ad:lda#0:adc ad+1:sta ad+1:jmp put1865.defnegate EQUB 6: EQUS "NEGATE": EQUB FNL(defmin): EQUB FNH(defmin)1870.negate jsr dropit:.negwrm lda ad:eor#&FF:sta ad:lda ad+1:eor#&FF:sta ad+1:jmp eenpluswrm1875.defmin EQUB 3: EQUS "MIN": EQUB FNL(defmaal): EQUB FNH(defmaal)1880.min jsr droptw:lda ad:sec:sbc ad+2:sta ad:lda ad+1:sbc ad+3:sta ad+1:jmp put1890.maalwrm lda#0:sta ad:sta ad+1:.maloop lda ad+2:bne maok:lda ad+3:bne maok:rts:.maok lda ad+2:and#1:beq masch1900lda ad:clc:adc ad+4:sta ad:lda ad+1:adc ad+5:sta ad+1:.masch lsr ad+3:ror ad+2:asl ad+4:rol ad+5:jmp maloop1905.defmaal EQUB 1: EQUS "*": EQUB FNL(defupunt): EQUB FNH(defupunt)1910.maal jsr droptw:lda ad:sta ad+4:lda ad+1:sta ad+5:jsr maalwrm:jmp put1915.defupunt EQUB 2: EQUS "U.": EQUB FNL(defpunt): EQUB FNH(defpunt)1920.upunt jsr dropit:.upuntwrm lda#&FF:.puntnbit pha:lda#0:sta ad+2:sta ad+3:ldx#16:.puntnext asl ad:rol ad+1:rol ad+2:rol ad+3:lda ad+2:sec:sbc base:tay:lda ad+3:sbc#0:bcc puntdone:inc ad:sty ad+2:sta ad+31930.puntdone dex:bne puntnext:lda ad+2:ldy ad:bne puntnbit:ldy ad+1:bne puntnbit:.puntout cmp#10:bcc puntadd: adc#6: .puntadd adc#48:jsr oswrch:pla:bpl puntout:.puntexit jmp spc1935.defpunt EQUB 1: EQUS ".": EQUB FNL(defdecimal): EQUB FNH(defdecimal)1940.punt jsr dropit:lda ad+1:bpl upuntwrm: lda#ASC"-":jsr oswrch:lda ad: eor#&FF:clc:adc#1:sta ad:lda ad+1:eor#&FF:adc#0:sta ad+1:jmp upuntwrm1945.defdecimal EQUB 7: EQUS "DECIMAL": EQUB FNL(defdp): EQUB FNH(defdp)1950.decimal lda#10:.bazep sta base:lda#0:sta base+1:rts1960.brkk lda&FD:clc:adc#1:sta ad:lda&FE:adc#0:sta ad+1:jsr put:ldy#0:.brklp lda(ad),Y:beq brkla:iny:bne brklp:.brkla sty ad:jsr msb0:jsr put:jsr brkin:jmp abort:.brkin jmp (ervek)1970.erv lda#FNL(ervek):sta ad:lda#FNH(ervek):sta ad+1:jmp put1975.defdp EQUB 2: EQUS "DP": EQUB FNL(defexit): EQUB FNH(defexit)1980.dp lda#FNL (here) :sta ad: lda#FNH(here):sta ad+1:jmp put1985.defexit EQUB 4: EQUS "EXIT": EQUB 0: EQUB 01990.exit lda#&60:jmp czet2000]2010NEXT2020ENDPROC2070DEFFNL(X%)=X%MOD2562080DEFFNH(X%)=X%DIV2562090DEFPROCP2100P%=P%+22110O%=O%+22120ENDPROC2130DEFFNinitwrd2140herstor=P%:PROCP2150lstor=P%:PROCP2160=opt%